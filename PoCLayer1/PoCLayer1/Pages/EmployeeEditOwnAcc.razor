@page "/EmployeeEditOwnAcc"
@using Microsoft.AspNetCore.Components
@using PoCLayer1.Authentication
@using PoCLayer1.Http
@using PoCLayer1.Model
@inject IEmployeeHttpClient _iEmployeeHttpClient
@inject NavigationManager navMgr
@inject IAuthService _authS



<div class="box">
    <h3>Edit your data:</h3>
    <EditForm Model="@userToEdit" OnValidSubmit="@Save">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="form-group field">
            <label>First name:</label>
            <div class="col-1">
                <InputTextArea type="text" placeholder="Enter first name" @bind-Value="userToEdit.firstName" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
            </div>
        </div>
        
        <div class="form-group field">
            <label>Last name:</label>
            <div class="col-1">
                <InputTextArea type="text" placeholder="Enter last name" @bind-Value="userToEdit.lastName" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
            </div>
        </div>
        
        <div class="form-group field">
                    <label>Phone number:</label>
            <div class="col-1">
                <InputTextArea type="text" placeholder="Enter phone number" @bind-Value="userToEdit.phoneNumber" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
                </div>
            </div>
        
        <div class="form-group field">
            <label>Email:</label>
            <div class="col-1">
                <InputTextArea type="text" placeholder="Enter Email" @bind-Value="userToEdit.email" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
            </div>
        </div>
        
        <div class="form-group field">
            <label>Address:</label>
            <div class="col-1">
                <InputTextArea type="text" placeholder="Enter address" @bind-Value="userToEdit.address" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
            </div>
        </div>
        
        <div class="form-group field">
            <label>Hours:</label>
            <div class="col-1">
                <InputNumber type="number" placeholder="Enter hours" @bind-Value="userToEdit.hours" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
            </div>
        </div>
        
        
        <div class="form-group field">
            <label>Password:</label>
            <div class="col-1">
                <InputTextArea type="text" placeholder="Enter password" @bind-Value="userToEdit.password" style="resize: none; text-align: center; max-height: 2.5rem; margin-top: 0.7rem; padding-top: 0.35rem"/>
            </div>
        </div>

        <p class="actions">
            <button type="submit">Update</button>
        </p>
    </EditForm>
    @if (!string.IsNullOrEmpty(errorLabel))
    {
        <label>@errorLabel</label>
    }

</div>


@code {

    [Parameter]
    public long Id { get; set; }

    private Employee userToEdit = new Employee();
    private String errorLabel = String.Empty;
    long loggedUser;
     
    
    protected override async Task OnInitializedAsync()
    {
        loggedUser =  await _authS.GetCurrentUserId();
        userToEdit = await _iEmployeeHttpClient.GetEmployeeByIdAsync(loggedUser);

    }
    private async Task Save()
    {
        errorLabel = "";
        try
        {
            await _iEmployeeHttpClient.UpdateEmployeeAsync(loggedUser, userToEdit);
            navMgr.NavigateTo("/home");
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
        }
    }
}